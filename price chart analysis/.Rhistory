test1.b1.mean = mean(test1.b1)
test1.b1.var = var(test1.b1)
es1 = test1.b1.mean/sqrt(test1.b1.var+1)
pwr.t.test(d=es1,power=0.8,sig.level=0.05,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=5), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
test1.b1.var = var(test1.b1)
es1 = test1.b1.mean/sqrt(test1.b1.var+1)
pwr.t.test(d=es1,power=0.8,sig.level=0.05,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=6), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
test1.b1.var = var(test1.b1)
es1 = test1.b1.mean/sqrt(test1.b1.var+1)
pwr.t.test(d=es1,power=0.8,sig.level=0.05,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=7), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
test1.b1.var = var(test1.b1)
es1 = test1.b1.mean/sqrt(test1.b1.var+1)
pwr.t.test(d=es1,power=0.8,sig.level=0.05,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=8), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
test1.b1.var = var(test1.b1)
es1 = test1.b1.mean/sqrt(test1.b1.var+1)
pwr.t.test(d=es1,power=0.8,sig.level=0.05,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=9), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
test1.b1.var = var(test1.b1)
es1 = test1.b1.mean/sqrt(test1.b1.var+1)
pwr.t.test(d=es1,power=0.8,sig.level=0.05,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=10), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
test1.b1.var = var(test1.b1)
es1 = test1.b1.mean/sqrt(test1.b1.var+1)
pwr.t.test(d=es1,power=0.8,sig.level=0.05,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=10), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
test1.b1.var = var(test1.b1)
es1 = test1.b1.mean/sqrt(test1.b1.var+1)
pwr.t.test(d=es1,n=100,sig.level=0.05,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=9), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
test1.b1.var = var(test1.b1)
es1 = test1.b1.mean/sqrt(test1.b1.var+1)
pwr.t.test(d=es1,n=100,sig.level=0.05,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=4), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
test1.b1.var = var(test1.b1)
es1 = test1.b1.mean/sqrt(test1.b1.var+1)
pwr.t.test(d=es1,n=100,sig.level=0.05,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=1), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
test1.b1.var = var(test1.b1)
es1 = test1.b1.mean/sqrt(test1.b1.var+1)
pwr.t.test(d=es1,n=100,sig.level=0.01,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=1), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
test1.b1.var = var(test1.b1)
es1 = test1.b1.mean/sqrt(test1.b1.var+1)
pwr.t.test(d=es1,n=100,sig.level=0.02,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=1), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
test1.b1.var = var(test1.b1)
es1 = test1.b1.mean/sqrt(test1.b1.var+1)
pwr.t.test(d=es1,n=100,sig.level=0.03,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=1), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
test1.b1.var = var(test1.b1)
es1 = test1.b1.mean/sqrt(test1.b1.var+1)
pwr.t.test(d=es1,n=100,sig.level=0.04,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=1), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
test1.b1.var = var(test1.b1)
es1 = test1.b1.mean/sqrt(test1.b1.var+1)
pwr.t.test(d=es1,n=100,sig.level=0.05,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=1), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
test1.b1.var = var(test1.b1)
es1 = test1.b1.mean/sqrt(test1.b1.var+1)
pwr.t.test(d=es1,n=100,sig.level=0.06,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=1), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
test1.b1.var = var(test1.b1)
es1 = test1.b1.mean/sqrt(test1.b1.var+1)
pwr.t.test(d=es1,n=100,sig.level=0.07,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=1), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
test1.b1.var = var(test1.b1)
es1 = test1.b1.mean/sqrt(test1.b1.var+1)
pwr.t.test(d=es1,n=100,sig.level=0.08,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=1), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
test1.b1.var = var(test1.b1)
es1 = test1.b1.mean/sqrt(test1.b1.var+1)
pwr.t.test(d=es1,n=100,sig.level=0.09,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=1), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
test1.b1.var = var(test1.b1)
es1 = test1.b1.mean/sqrt(test1.b1.var+1)
pwr.t.test(d=es1,n=100,sig.level=0.1,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=1), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
test1.b1.var = var(test1.b1)
es1 = test1.b1.mean/sqrt(1)
pwr.t.test(d=es1,n=100,sig.level=0.1,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=2), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
test1.b1.var = var(test1.b1)
es1 = test1.b1.mean/sqrt(2)
pwr.t.test(d=es1,n=100,sig.level=0.05,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=3), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
test1.b1.var = var(test1.b1)
es1 = test1.b1.mean/sqrt(3)
pwr.t.test(d=es1,n=100,sig.level=0.05,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=10), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
test1.b1.var = var(test1.b1)
es1 = test1.b1.mean/sqrt(3)
pwr.t.test(d=es1,n=100,sig.level=0.05,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=10), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
test1.b1.var = var(test1.b1)
es1 = test1.b1.mean/sqrt(10)
pwr.t.test(d=es1,n=100,sig.level=0.05,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=6), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
test1.b1.var = var(test1.b1)
es1 = test1.b1.mean/sqrt(10)
pwr.t.test(d=es1,n=100,sig.level=0.05,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=6), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
test1.b1.var = var(test1.b1)
es1 = test1.b1.mean/sqrt(6)
pwr.t.test(d=es1,n=100,sig.level=0.05,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=6), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
es1 = test1.b1.mean/sqrt(6)
pwr.t.test(d=es1,n=100,sig.level=0.05,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=6), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
es1 = test1.b1.mean
pwr.t.test(d=es1,n=100,sig.level=0.05,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=7), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
es1 = test1.b1.mean
pwr.t.test(d=es1,n=100,sig.level=0.05,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=8), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
es1 = test1.b1.mean
pwr.t.test(d=es1,n=100,sig.level=0.05,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=8), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
es1 = test1.b1.mean/sqrt(8)
pwr.t.test(d=es1,n=100,sig.level=0.05,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=1), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
es1 = test1.b1.mean/sqrt(1)
pwr.t.test(d=es1,n=100,sig.level=0.05,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=1), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
es1 = test1.b1.mean/sqrt(1)
pwr.t.test(d=es1,n=100,sig.level=0.01,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=1), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
es1 = test1.b1.mean/sqrt(1)
pwr.t.test(d=es1,n=100,sig.level=0.02,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=1), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
es1 = test1.b1.mean/sqrt(1)
pwr.t.test(d=es1,n=100,sig.level=0.09,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=1), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
es1 = test1.b1.mean/sqrt(1)
pwr.t.test(d=es1,n=100,sig.level=0.1,type="one.sample")
set.seed(1)
test.data1 = matrix(rpois(1000*100, lambda=1), nrow=1000, ncol=100)
test1.b1 = apply(test.data1,1,skewness)
test1.b1.mean = mean(test1.b1)
es1 = test1.b1.mean/sqrt(1)
pwr.t.test(d=es1,power=0.8,sig.level=0.1,type="one.sample")
set.seed(1)
power.calc = function(x){
test.data = matrix(rpois(1000*100, lambda=x), nrow=1000, ncol=100)
test.b1 = apply(test.data,1,skewness)
test.b1.mean = mean(test.b1)
es1 = test1.b1.mean/sqrt(x)
power.b1 = pwr.t.test(d=es1,power=0.8,sig.level=0.1,type="one.sample")[["power"]]
}
powervslambda = data.frame("lambda"=seq(1,10,1))
powervslambda = mutate(powervslambda,power=power.calc(lambda))
set.seed(1)
power.calc = function(x){
test.data = matrix(rpois(1000*100, lambda=x), nrow=1000, ncol=100)
test.b1 = apply(test.data,1,skewness)
test.b1.mean = mean(test.b1)
es1 = test1.b1.mean/sqrt(x)
power.b1 = pwr.t.test(d=es1,power=0.8,sig.level=0.1,type="one.sample")[["power"]]
}
powervslambda = data.frame("lambda"=seq(1,10,1))
mutate(powervslambda,power=power.calc(lambda))
set.seed(1)
power.calc = function(x){
test.data = matrix(rpois(1000*100, lambda=x), nrow=1000, ncol=100)
test.b1 = apply(test.data,1,skewness)
test.b1.mean = mean(test.b1)
es1 = test1.b1.mean/sqrt(x)
power.b1 = pwr.t.test(d=es1,power=0.8,sig.level=0.1,type="one.sample")[["power"]]
}
powervslambda = data.frame("lambda"=seq(1,10,1))
mutate(powervslambda,power=power.calc(lambda))
set.seed(1)
power.calc = function(x){
test.data = matrix(rpois(1000*100, lambda=x), nrow=1000, ncol=100)
test.b1 = apply(test.data,1,skewness)
test.b1.mean = mean(test.b1)
es1 = test1.b1.mean/sqrt(x)
power.b1 = pwr.t.test(d=es1,power=0.8,sig.level=0.1,type="one.sample")[["power"]]
}
powervslambda = data.frame("lambda"=seq(1,10,1))
mutate(powervslambda,power=power.calc(lambda))
set.seed(1)
power.calc = function(x){
test.data = matrix(rpois(1000*100, lambda=x), nrow=1000, ncol=100)
test.b1 = apply(test.data,1,skewness)
test.b1.mean = mean(test.b1)
es1 = test1.b1.mean/sqrt(x)
power.b1 = pwr.t.test(d=es1,power=0.8,sig.level=0.1,type="one.sample")[["power"]]
}
powervslambda = data.frame("lambda"=seq(1,10,1))
mutate(powervslambda,power=power.calc(lambda))
set.seed(1)
power.calc = function(x){
test.data = matrix(rpois(1000*100, lambda=x), nrow=1000, ncol=100)
test.b1 = apply(test.data,1,skewness)
test.b1.mean = mean(test.b1)
es1 = test1.b1.mean/sqrt(x)
power.b1 = pwr.t.test(d=es1,power=0.8,sig.level=0.1,type="one.sample")[["power"]]
}
powervslambda = data.frame("lambda"=seq(1,10,1))
mutate(powervslambda,power=power.calc(lambda))
set.seed(1)
power.calc = function(x){
test.data = rpois(100, lambda=x)
test.b1 = skewness(test.data)
es1 = test1.b1/sqrt(x)
power.b1 = pwr.t.test(d=es1,n=100,sig.level=0.05,type="one.sample")[["power"]]
}
powervslambda = data.frame("lambda"=seq(1,10,1))
mutate(powervslambda,power=power.calc(lambda))
set.seed(1)
power.calc = function(x){
test.data = rpois(100, lambda=x)
test.b1 = skewness(test.data)
es1 = test1.b1/sqrt(x)
power.b1 = pwr.t.test(d=es1,n=100,sig.level=0.05,type="one.sample")[["power"]]
}
powervslambda = data.frame("lambda"=seq(1,10,1))
mutate(powervslambda,power=power.calc(lambda))
set.seed(1)
power.calc = function(x){
test.data = rpois(100, lambda=x)
test.b1 = skewness(test.data)
es1 = test1.b1/sqrt(x)
power.b1 = pwr.t.test(d=es1,n=100,sig.level=0.05,type="one.sample")[["power"]]
}
powervslambda = data.frame("lambda"=seq(1,10,1))
mutate(powervslambda,power=power.calc(lambda))
set.seed(1)
power.calc = function(x){
test.data = rpois(100, lambda=x)
test.b1 = skewness(test.data)
es1 = test1.b1/sqrt(x)
power.b1 = pwr.t.test(d=es1,n=100,sig.level=0.05,type="one.sample")[["power"]]
}
powervslambda = data.frame("lambda"=seq(1,10,1))
mutate(powervslambda,power=power.calc(lambda))
set.seed(1)
power.calc = function(x){
test.data = rpois(100, lambda=x)
test.b1 = skewness(test.data)
es1 = test.b1/sqrt(x)
power.b1 = pwr.t.test(d=es1,n=100,sig.level=0.05,type="one.sample")[["power"]]
}
powervslambda = data.frame("lambda"=seq(1,10,1))
mutate(powervslambda,power=power.calc(lambda))
set.seed(1)
power.calc = function(x){
test.data = rpois(100, lambda=x)
test.b1 = skewness(test.data)
es1 = test.b1/sqrt(x)
power.b1 = pwr.t.test(d=es1,n=100,sig.level=0.05,type="one.sample")[["power"]]
}
powervslambda = data.frame("lambda"=seq(1,10,1))
plot(mutate(powervslambda,power=power.calc(lambda)))
set.seed(1)
power.calc = function(x){
test.data = rpois(100, lambda=x)
test.b1 = skewness(test.data)
es1 = test.b1/sqrt(x)
power.b1 = pwr.t.test(d=es1,n=100,sig.level=0.05,type="one.sample")[["power"]]
}
powervslambda = data.frame("lambda"=seq(1,10,1))
plot(mutate(powervslambda,power=power.calc(lambda)),type="l")
set.seed(1)
power.calc = function(x){
test.data = rpois(100, lambda=1)
test.b1 = skewness(test.data)
es1 = test.b1/sqrt(1)
power.b1 = pwr.t.test(d=es1,n=100,sig.level=x,type="one.sample")[["power"]]
}
powervslambda = data.frame("lambda"=seq(0.01,0.1,0.01))
plot(mutate(powervslambda,power=power.calc(lambda)),type="l")
set.seed(1)
data1 = data.frame(
batch1 = rnorm(10,mean=4,sd=sqrt(0.0037)),
batch2 = rnorm(10,mean=4,sd=sqrt(0.0037)),
batch3 = rnorm(10,mean=4,sd=sqrt(0.0037)),
batch4 = rnorm(10,mean=4,sd=sqrt(0.0037)),
batch5 = rnorm(10,mean=4,sd=sqrt(0.0037)),
batch6 = rnorm(10,mean=4,sd=sqrt(0.0037)),
batch7 = rnorm(10,mean=4,sd=sqrt(0.0037))
)
boxplot(data1)
set.seed(1)
data2 = data.frame(
batch1 = rnorm(10,mean=4,sd=sqrt(0.0037)),
batch2 = rnorm(10,mean=4,sd=sqrt(0.0037)),
batch3 = rnorm(10,mean=4,sd=sqrt(0.0037)),
batch4 = rnorm(10,mean=4,sd=sqrt(0.0037)),
batch5 = rnorm(10,mean=4,sd=sqrt(0.0037)),
batch6 = rnorm(10,mean=4,sd=sqrt(0.0037)),
batch7 = rnorm(10,mean=4,sd=sqrt(0.0037))
)
boxplot(data2)
set.seed(2)
data2 = data.frame(
batch1 = rnorm(10,mean=4,sd=sqrt(0.0037)),
batch2 = rnorm(10,mean=4,sd=sqrt(0.0037)),
batch3 = rnorm(10,mean=4,sd=sqrt(0.0037)),
batch4 = rnorm(10,mean=4,sd=sqrt(0.0037)),
batch5 = rnorm(10,mean=4,sd=sqrt(0.0037)),
batch6 = rnorm(10,mean=4,sd=sqrt(0.0037)),
batch7 = rnorm(10,mean=4,sd=sqrt(0.0037))
)
boxplot(data2)
set.seed(1)
data1 = data.frame(
batch1.1 = rnorm(10,mean=4,sd=sqrt(0.0037)),
batch1.2 = rnorm(10,mean=4,sd=sqrt(0.0037)),
batch1.3 = rnorm(10,mean=4,sd=sqrt(0.0037)),
batch1.4 = rnorm(10,mean=4,sd=sqrt(0.0037)),
batch1.5 = rnorm(10,mean=4,sd=sqrt(0.0037)),
batch1.6 = rnorm(10,mean=4,sd=sqrt(0.0037)),
batch1.7 = rnorm(10,mean=4,sd=sqrt(0.0037))
)
data2 = data.frame(
batch2.1 = rnorm(10,mean=4,sd=sqrt(0.0037)),
batch2.2 = rnorm(10,mean=4,sd=sqrt(0.0037)),
batch2.3 = rnorm(10,mean=4,sd=sqrt(0.0037)),
batch2.4 = rnorm(10,mean=4,sd=sqrt(0.0037)),
batch2.5 = rnorm(10,mean=4,sd=sqrt(0.0037)),
batch2.6 = rnorm(10,mean=4,sd=sqrt(0.0037)),
batch2.7 = rnorm(10,mean=4,sd=sqrt(0.0037))
)
boxplot(data1,data2)
set.seed(2)
data2 = data.frame(
batch2.1 = rnorm(10,mean=4,sd=sqrt(0.0037)),
batch2.2 = rnorm(10,mean=4,sd=sqrt(0.0037)),
batch2.3 = rnorm(10,mean=4,sd=sqrt(0.0037)),
batch2.4 = rnorm(10,mean=4,sd=sqrt(0.0037)),
batch2.5 = rnorm(10,mean=4,sd=sqrt(0.0037)),
batch2.6 = rnorm(10,mean=4,sd=sqrt(0.0037)),
batch2.7 = rnorm(10,mean=4,sd=sqrt(0.0037))
)
boxplot(data2)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyquant)
library(timetk)
library(tidyverse)
stocks <- c("NFLX", "GOOGL", "AAPL", "TSLA", "SQ")
portfolio <- tq_get(stocks,from = "2016-01-01",to = "2021-10-01",get = "stock.prices")
portfolio.daily.ret <- tq_transmute(data=group_by(portfolio,symbol),select = adjusted,mutate_fun = periodReturn,period = 'daily',col_rename = 'returns')
portfolio.monthly.ret <- tq_transmute(data=group_by(portfolio,symbol),select = adjusted,mutate_fun = periodReturn,period = 'monthly',col_rename = 'returns')
View(portfolio)
View(portfolio)
save.image("C:/Users/wesha/OneDrive/桌面/QBS Group Project Data.RData")
save.image("C:/Users/wesha/OneDrive/桌面/QBS 181 Group Project Data.RData")
setwd("D:/Dartmouth/QBS 181/Group Project")
write.csv(portfolio,file='portfolio.csv')
write.csv(portfolio.daily.ret,file='portfolio_daily_ret.csv')
write.csv(portfolio.monthly.ret,file='portfolio_monthly_ret.csv')
worms = data.frame(
group=as.factor(c(rep("Group I", 5), rep("Group II", 5),rep("Group III", 5), rep("Group IV", 5))),
count=c(279,338,334,198,303,
378,275,412,265,286,
172,335,335,282,250,
381,346,340,471,318))
View(worms)
worms = data.frame(
group=as.factor(c(rep("Group I", 5), rep("Group II", 5),rep("Group III", 5), rep("Group IV", 5))),
count=c(279,338,334,198,303,
378,275,412,265,286,
172,335,335,282,250,
381,346,340,471,318))
boxplot(group~count,data=worms,notch=TRUE)
worms = data.frame(
group=as.factor(c(rep("Group I", 5), rep("Group II", 5),rep("Group III", 5), rep("Group IV", 5))),
count=c(279,338,334,198,303,
378,275,412,265,286,
172,335,335,282,250,
381,346,340,471,318))
boxplot(count~group,data=worms,notch=TRUE)
worms = data.frame(
group=as.factor(c(rep("Group I", 5), rep("Group II", 5),rep("Group III", 5), rep("Group IV", 5))),
count=c(279,338,334,198,303,
378,275,412,265,286,
172,335,335,282,250,
381,346,340,471,318))
boxplot(count~group,data=worms,notch=FALSE)
lm.results = lm(count~group,worms)
as.martix(anova(lm.results))
lm.results = lm(count~group,worms)
as.matrix(anova(lm.results))
kruskal.test(worms$count,worms$group)
pchisq(0.1,3)
pchisq(0.05,3)
qchisq(0.05,3)
qchisq(0.1,3)
qchisq(6.25,3)
pchisq(6.25,3)
qchisq(0.9,3)
worms = data.frame(
group=as.factor(c(rep("Group I", 5), rep("Group II", 5),rep("Group III", 5), rep("Group IV", 5))),
count=c(279,338,334,198,303,
378,275,412,265,286,
172,335,335,282,250,
381,346,340,471,318))
boxplot(count~group,data=worms,notch=FALSE)
